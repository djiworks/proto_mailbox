// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

public final class MailboxFactory_Stub
    extends java.rmi.server.RemoteStub
    implements MailboxFactoryInterface, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_createMailbox_0;
    private static java.lang.reflect.Method $method_deleteMailbox_1;
    
    static {
	try {
	    $method_createMailbox_0 = MailboxFactoryInterface.class.getMethod("createMailbox", new java.lang.Class[] {java.lang.String.class});
	    $method_deleteMailbox_1 = MailboxFactoryInterface.class.getMethod("deleteMailbox", new java.lang.Class[] {java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public MailboxFactory_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of createMailbox(String)
    public boolean createMailbox(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_createMailbox_0, new java.lang.Object[] {$param_String_1}, 1380199117850188976L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of deleteMailbox(String)
    public boolean deleteMailbox(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_deleteMailbox_1, new java.lang.Object[] {$param_String_1}, -1787977501700264605L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
